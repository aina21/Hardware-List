#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace fatemeh_HardWare.Data
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="HardWare")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InserttblGroup(tblGroup instance);
    partial void UpdatetblGroup(tblGroup instance);
    partial void DeletetblGroup(tblGroup instance);
    partial void InserttblBuilding(tblBuilding instance);
    partial void UpdatetblBuilding(tblBuilding instance);
    partial void DeletetblBuilding(tblBuilding instance);
    partial void InserttblPerson_Room(tblPerson_Room instance);
    partial void UpdatetblPerson_Room(tblPerson_Room instance);
    partial void DeletetblPerson_Room(tblPerson_Room instance);
    partial void InserttblPerson(tblPerson instance);
    partial void UpdatetblPerson(tblPerson instance);
    partial void DeletetblPerson(tblPerson instance);
    partial void InserttblState(tblState instance);
    partial void UpdatetblState(tblState instance);
    partial void DeletetblState(tblState instance);
    partial void InserttblWarranty(tblWarranty instance);
    partial void UpdatetblWarranty(tblWarranty instance);
    partial void DeletetblWarranty(tblWarranty instance);
    partial void InserttblHardware(tblHardware instance);
    partial void UpdatetblHardware(tblHardware instance);
    partial void DeletetblHardware(tblHardware instance);
    partial void InserttblEquipment(tblEquipment instance);
    partial void UpdatetblEquipment(tblEquipment instance);
    partial void DeletetblEquipment(tblEquipment instance);
    partial void InserttblReport(tblReport instance);
    partial void UpdatetblReport(tblReport instance);
    partial void DeletetblReport(tblReport instance);
    partial void InserttblSystem(tblSystem instance);
    partial void UpdatetblSystem(tblSystem instance);
    partial void DeletetblSystem(tblSystem instance);
    #endregion
		
		public DataClasses1DataContext() : 
				base(global::fatemeh_HardWare.Properties.Settings.Default.HardWareConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<tblGroup> tblGroups
		{
			get
			{
				return this.GetTable<tblGroup>();
			}
		}
		
		public System.Data.Linq.Table<tblBuilding> tblBuildings
		{
			get
			{
				return this.GetTable<tblBuilding>();
			}
		}
		
		public System.Data.Linq.Table<tblPerson_Room> tblPerson_Rooms
		{
			get
			{
				return this.GetTable<tblPerson_Room>();
			}
		}
		
		public System.Data.Linq.Table<tblPerson> tblPersons
		{
			get
			{
				return this.GetTable<tblPerson>();
			}
		}
		
		public System.Data.Linq.Table<tblState> tblStates
		{
			get
			{
				return this.GetTable<tblState>();
			}
		}
		
		public System.Data.Linq.Table<tblWarranty> tblWarranties
		{
			get
			{
				return this.GetTable<tblWarranty>();
			}
		}
		
		public System.Data.Linq.Table<tblHardware> tblHardwares
		{
			get
			{
				return this.GetTable<tblHardware>();
			}
		}
		
		public System.Data.Linq.Table<tblEquipment> tblEquipments
		{
			get
			{
				return this.GetTable<tblEquipment>();
			}
		}
		
		public System.Data.Linq.Table<tblReport> tblReports
		{
			get
			{
				return this.GetTable<tblReport>();
			}
		}
		
		public System.Data.Linq.Table<tblSystem> tblSystems
		{
			get
			{
				return this.GetTable<tblSystem>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblGroup")]
	public partial class tblGroup : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _group_code;
		
		private string _group_name;
		
		private EntitySet<tblPerson> _tblPersons;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Ongroup_codeChanging(int value);
    partial void Ongroup_codeChanged();
    partial void Ongroup_nameChanging(string value);
    partial void Ongroup_nameChanged();
    #endregion
		
		public tblGroup()
		{
			this._tblPersons = new EntitySet<tblPerson>(new Action<tblPerson>(this.attach_tblPersons), new Action<tblPerson>(this.detach_tblPersons));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_group_code", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int group_code
		{
			get
			{
				return this._group_code;
			}
			set
			{
				if ((this._group_code != value))
				{
					this.Ongroup_codeChanging(value);
					this.SendPropertyChanging();
					this._group_code = value;
					this.SendPropertyChanged("group_code");
					this.Ongroup_codeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_group_name", DbType="NVarChar(50)")]
		public string group_name
		{
			get
			{
				return this._group_name;
			}
			set
			{
				if ((this._group_name != value))
				{
					this.Ongroup_nameChanging(value);
					this.SendPropertyChanging();
					this._group_name = value;
					this.SendPropertyChanged("group_name");
					this.Ongroup_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblGroup_tblPerson", Storage="_tblPersons", ThisKey="group_code", OtherKey="group_code")]
		public EntitySet<tblPerson> tblPersons
		{
			get
			{
				return this._tblPersons;
			}
			set
			{
				this._tblPersons.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tblPersons(tblPerson entity)
		{
			this.SendPropertyChanging();
			entity.tblGroup = this;
		}
		
		private void detach_tblPersons(tblPerson entity)
		{
			this.SendPropertyChanging();
			entity.tblGroup = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblBuilding")]
	public partial class tblBuilding : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _building_code;
		
		private string _building_name;
		
		private EntitySet<tblPerson_Room> _tblPerson_Rooms;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onbuilding_codeChanging(int value);
    partial void Onbuilding_codeChanged();
    partial void Onbuilding_nameChanging(string value);
    partial void Onbuilding_nameChanged();
    #endregion
		
		public tblBuilding()
		{
			this._tblPerson_Rooms = new EntitySet<tblPerson_Room>(new Action<tblPerson_Room>(this.attach_tblPerson_Rooms), new Action<tblPerson_Room>(this.detach_tblPerson_Rooms));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_building_code", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int building_code
		{
			get
			{
				return this._building_code;
			}
			set
			{
				if ((this._building_code != value))
				{
					this.Onbuilding_codeChanging(value);
					this.SendPropertyChanging();
					this._building_code = value;
					this.SendPropertyChanged("building_code");
					this.Onbuilding_codeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_building_name", DbType="NVarChar(50)")]
		public string building_name
		{
			get
			{
				return this._building_name;
			}
			set
			{
				if ((this._building_name != value))
				{
					this.Onbuilding_nameChanging(value);
					this.SendPropertyChanging();
					this._building_name = value;
					this.SendPropertyChanged("building_name");
					this.Onbuilding_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblBuilding_tblPerson_Room", Storage="_tblPerson_Rooms", ThisKey="building_code", OtherKey="bulding_code")]
		public EntitySet<tblPerson_Room> tblPerson_Rooms
		{
			get
			{
				return this._tblPerson_Rooms;
			}
			set
			{
				this._tblPerson_Rooms.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tblPerson_Rooms(tblPerson_Room entity)
		{
			this.SendPropertyChanging();
			entity.tblBuilding = this;
		}
		
		private void detach_tblPerson_Rooms(tblPerson_Room entity)
		{
			this.SendPropertyChanging();
			entity.tblBuilding = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblPerson_Room")]
	public partial class tblPerson_Room : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _room_code;
		
		private int _bulding_code;
		
		private int _person_code;
		
		private EntityRef<tblBuilding> _tblBuilding;
		
		private EntityRef<tblPerson> _tblPerson;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onroom_codeChanging(string value);
    partial void Onroom_codeChanged();
    partial void Onbulding_codeChanging(int value);
    partial void Onbulding_codeChanged();
    partial void Onperson_codeChanging(int value);
    partial void Onperson_codeChanged();
    #endregion
		
		public tblPerson_Room()
		{
			this._tblBuilding = default(EntityRef<tblBuilding>);
			this._tblPerson = default(EntityRef<tblPerson>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_room_code", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string room_code
		{
			get
			{
				return this._room_code;
			}
			set
			{
				if ((this._room_code != value))
				{
					this.Onroom_codeChanging(value);
					this.SendPropertyChanging();
					this._room_code = value;
					this.SendPropertyChanged("room_code");
					this.Onroom_codeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bulding_code", DbType="Int NOT NULL")]
		public int bulding_code
		{
			get
			{
				return this._bulding_code;
			}
			set
			{
				if ((this._bulding_code != value))
				{
					if (this._tblBuilding.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onbulding_codeChanging(value);
					this.SendPropertyChanging();
					this._bulding_code = value;
					this.SendPropertyChanged("bulding_code");
					this.Onbulding_codeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_person_code", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int person_code
		{
			get
			{
				return this._person_code;
			}
			set
			{
				if ((this._person_code != value))
				{
					if (this._tblPerson.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onperson_codeChanging(value);
					this.SendPropertyChanging();
					this._person_code = value;
					this.SendPropertyChanged("person_code");
					this.Onperson_codeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblBuilding_tblPerson_Room", Storage="_tblBuilding", ThisKey="bulding_code", OtherKey="building_code", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public tblBuilding tblBuilding
		{
			get
			{
				return this._tblBuilding.Entity;
			}
			set
			{
				tblBuilding previousValue = this._tblBuilding.Entity;
				if (((previousValue != value) 
							|| (this._tblBuilding.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblBuilding.Entity = null;
						previousValue.tblPerson_Rooms.Remove(this);
					}
					this._tblBuilding.Entity = value;
					if ((value != null))
					{
						value.tblPerson_Rooms.Add(this);
						this._bulding_code = value.building_code;
					}
					else
					{
						this._bulding_code = default(int);
					}
					this.SendPropertyChanged("tblBuilding");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblPerson_tblPerson_Room", Storage="_tblPerson", ThisKey="person_code", OtherKey="person_code", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public tblPerson tblPerson
		{
			get
			{
				return this._tblPerson.Entity;
			}
			set
			{
				tblPerson previousValue = this._tblPerson.Entity;
				if (((previousValue != value) 
							|| (this._tblPerson.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblPerson.Entity = null;
						previousValue.tblPerson_Room = null;
					}
					this._tblPerson.Entity = value;
					if ((value != null))
					{
						value.tblPerson_Room = this;
						this._person_code = value.person_code;
					}
					else
					{
						this._person_code = default(int);
					}
					this.SendPropertyChanged("tblPerson");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblPerson")]
	public partial class tblPerson : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _person_code;
		
		private string _person_name;
		
		private string _person_lastName;
		
		private string _person_dakheli;
		
		private System.Nullable<int> _group_code;
		
		private string _person_password;
		
		private System.Nullable<bool> _person_maneger;
		
		private bool _person_fireezing;
		
		private EntityRef<tblPerson_Room> _tblPerson_Room;
		
		private EntitySet<tblReport> _tblReports;
		
		private EntityRef<tblGroup> _tblGroup;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onperson_codeChanging(int value);
    partial void Onperson_codeChanged();
    partial void Onperson_nameChanging(string value);
    partial void Onperson_nameChanged();
    partial void Onperson_lastNameChanging(string value);
    partial void Onperson_lastNameChanged();
    partial void Onperson_dakheliChanging(string value);
    partial void Onperson_dakheliChanged();
    partial void Ongroup_codeChanging(System.Nullable<int> value);
    partial void Ongroup_codeChanged();
    partial void Onperson_passwordChanging(string value);
    partial void Onperson_passwordChanged();
    partial void Onperson_manegerChanging(System.Nullable<bool> value);
    partial void Onperson_manegerChanged();
    partial void Onperson_fireezingChanging(bool value);
    partial void Onperson_fireezingChanged();
    #endregion
		
		public tblPerson()
		{
			this._tblPerson_Room = default(EntityRef<tblPerson_Room>);
			this._tblReports = new EntitySet<tblReport>(new Action<tblReport>(this.attach_tblReports), new Action<tblReport>(this.detach_tblReports));
			this._tblGroup = default(EntityRef<tblGroup>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_person_code", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int person_code
		{
			get
			{
				return this._person_code;
			}
			set
			{
				if ((this._person_code != value))
				{
					this.Onperson_codeChanging(value);
					this.SendPropertyChanging();
					this._person_code = value;
					this.SendPropertyChanged("person_code");
					this.Onperson_codeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_person_name", DbType="NVarChar(50)")]
		public string person_name
		{
			get
			{
				return this._person_name;
			}
			set
			{
				if ((this._person_name != value))
				{
					this.Onperson_nameChanging(value);
					this.SendPropertyChanging();
					this._person_name = value;
					this.SendPropertyChanged("person_name");
					this.Onperson_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_person_lastName", DbType="NVarChar(50)")]
		public string person_lastName
		{
			get
			{
				return this._person_lastName;
			}
			set
			{
				if ((this._person_lastName != value))
				{
					this.Onperson_lastNameChanging(value);
					this.SendPropertyChanging();
					this._person_lastName = value;
					this.SendPropertyChanged("person_lastName");
					this.Onperson_lastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_person_dakheli", DbType="NVarChar(50)")]
		public string person_dakheli
		{
			get
			{
				return this._person_dakheli;
			}
			set
			{
				if ((this._person_dakheli != value))
				{
					this.Onperson_dakheliChanging(value);
					this.SendPropertyChanging();
					this._person_dakheli = value;
					this.SendPropertyChanged("person_dakheli");
					this.Onperson_dakheliChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_group_code", DbType="Int")]
		public System.Nullable<int> group_code
		{
			get
			{
				return this._group_code;
			}
			set
			{
				if ((this._group_code != value))
				{
					if (this._tblGroup.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Ongroup_codeChanging(value);
					this.SendPropertyChanging();
					this._group_code = value;
					this.SendPropertyChanged("group_code");
					this.Ongroup_codeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_person_password", DbType="NVarChar(50)")]
		public string person_password
		{
			get
			{
				return this._person_password;
			}
			set
			{
				if ((this._person_password != value))
				{
					this.Onperson_passwordChanging(value);
					this.SendPropertyChanging();
					this._person_password = value;
					this.SendPropertyChanged("person_password");
					this.Onperson_passwordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_person_maneger", DbType="Bit")]
		public System.Nullable<bool> person_maneger
		{
			get
			{
				return this._person_maneger;
			}
			set
			{
				if ((this._person_maneger != value))
				{
					this.Onperson_manegerChanging(value);
					this.SendPropertyChanging();
					this._person_maneger = value;
					this.SendPropertyChanged("person_maneger");
					this.Onperson_manegerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_person_fireezing", DbType="Bit NOT NULL")]
		public bool person_fireezing
		{
			get
			{
				return this._person_fireezing;
			}
			set
			{
				if ((this._person_fireezing != value))
				{
					this.Onperson_fireezingChanging(value);
					this.SendPropertyChanging();
					this._person_fireezing = value;
					this.SendPropertyChanged("person_fireezing");
					this.Onperson_fireezingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblPerson_tblPerson_Room", Storage="_tblPerson_Room", ThisKey="person_code", OtherKey="person_code", IsUnique=true, IsForeignKey=false)]
		public tblPerson_Room tblPerson_Room
		{
			get
			{
				return this._tblPerson_Room.Entity;
			}
			set
			{
				tblPerson_Room previousValue = this._tblPerson_Room.Entity;
				if (((previousValue != value) 
							|| (this._tblPerson_Room.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblPerson_Room.Entity = null;
						previousValue.tblPerson = null;
					}
					this._tblPerson_Room.Entity = value;
					if ((value != null))
					{
						value.tblPerson = this;
					}
					this.SendPropertyChanged("tblPerson_Room");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblPerson_tblReport", Storage="_tblReports", ThisKey="person_code", OtherKey="Person_code")]
		public EntitySet<tblReport> tblReports
		{
			get
			{
				return this._tblReports;
			}
			set
			{
				this._tblReports.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblGroup_tblPerson", Storage="_tblGroup", ThisKey="group_code", OtherKey="group_code", IsForeignKey=true, DeleteRule="CASCADE")]
		public tblGroup tblGroup
		{
			get
			{
				return this._tblGroup.Entity;
			}
			set
			{
				tblGroup previousValue = this._tblGroup.Entity;
				if (((previousValue != value) 
							|| (this._tblGroup.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblGroup.Entity = null;
						previousValue.tblPersons.Remove(this);
					}
					this._tblGroup.Entity = value;
					if ((value != null))
					{
						value.tblPersons.Add(this);
						this._group_code = value.group_code;
					}
					else
					{
						this._group_code = default(Nullable<int>);
					}
					this.SendPropertyChanged("tblGroup");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tblReports(tblReport entity)
		{
			this.SendPropertyChanging();
			entity.tblPerson = this;
		}
		
		private void detach_tblReports(tblReport entity)
		{
			this.SendPropertyChanging();
			entity.tblPerson = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblState")]
	public partial class tblState : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _state_code;
		
		private string _state_name;
		
		private EntitySet<tblEquipment> _tblEquipments;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onstate_codeChanging(int value);
    partial void Onstate_codeChanged();
    partial void Onstate_nameChanging(string value);
    partial void Onstate_nameChanged();
    #endregion
		
		public tblState()
		{
			this._tblEquipments = new EntitySet<tblEquipment>(new Action<tblEquipment>(this.attach_tblEquipments), new Action<tblEquipment>(this.detach_tblEquipments));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_state_code", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int state_code
		{
			get
			{
				return this._state_code;
			}
			set
			{
				if ((this._state_code != value))
				{
					this.Onstate_codeChanging(value);
					this.SendPropertyChanging();
					this._state_code = value;
					this.SendPropertyChanged("state_code");
					this.Onstate_codeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_state_name", DbType="NVarChar(50)")]
		public string state_name
		{
			get
			{
				return this._state_name;
			}
			set
			{
				if ((this._state_name != value))
				{
					this.Onstate_nameChanging(value);
					this.SendPropertyChanging();
					this._state_name = value;
					this.SendPropertyChanged("state_name");
					this.Onstate_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblState_tblEquipment", Storage="_tblEquipments", ThisKey="state_code", OtherKey="state_code")]
		public EntitySet<tblEquipment> tblEquipments
		{
			get
			{
				return this._tblEquipments;
			}
			set
			{
				this._tblEquipments.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tblEquipments(tblEquipment entity)
		{
			this.SendPropertyChanging();
			entity.tblState = this;
		}
		
		private void detach_tblEquipments(tblEquipment entity)
		{
			this.SendPropertyChanging();
			entity.tblState = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblWarranty")]
	public partial class tblWarranty : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _warranty_code;
		
		private string _warranty_name;
		
		private string _warranty_start;
		
		private string _warranty_end;
		
		private EntitySet<tblEquipment> _tblEquipments;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onwarranty_codeChanging(int value);
    partial void Onwarranty_codeChanged();
    partial void Onwarranty_nameChanging(string value);
    partial void Onwarranty_nameChanged();
    partial void Onwarranty_startChanging(string value);
    partial void Onwarranty_startChanged();
    partial void Onwarranty_endChanging(string value);
    partial void Onwarranty_endChanged();
    #endregion
		
		public tblWarranty()
		{
			this._tblEquipments = new EntitySet<tblEquipment>(new Action<tblEquipment>(this.attach_tblEquipments), new Action<tblEquipment>(this.detach_tblEquipments));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_warranty_code", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int warranty_code
		{
			get
			{
				return this._warranty_code;
			}
			set
			{
				if ((this._warranty_code != value))
				{
					this.Onwarranty_codeChanging(value);
					this.SendPropertyChanging();
					this._warranty_code = value;
					this.SendPropertyChanged("warranty_code");
					this.Onwarranty_codeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_warranty_name", DbType="NVarChar(50)")]
		public string warranty_name
		{
			get
			{
				return this._warranty_name;
			}
			set
			{
				if ((this._warranty_name != value))
				{
					this.Onwarranty_nameChanging(value);
					this.SendPropertyChanging();
					this._warranty_name = value;
					this.SendPropertyChanged("warranty_name");
					this.Onwarranty_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_warranty_start", DbType="VarChar(50)")]
		public string warranty_start
		{
			get
			{
				return this._warranty_start;
			}
			set
			{
				if ((this._warranty_start != value))
				{
					this.Onwarranty_startChanging(value);
					this.SendPropertyChanging();
					this._warranty_start = value;
					this.SendPropertyChanged("warranty_start");
					this.Onwarranty_startChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_warranty_end", DbType="VarChar(50)")]
		public string warranty_end
		{
			get
			{
				return this._warranty_end;
			}
			set
			{
				if ((this._warranty_end != value))
				{
					this.Onwarranty_endChanging(value);
					this.SendPropertyChanging();
					this._warranty_end = value;
					this.SendPropertyChanged("warranty_end");
					this.Onwarranty_endChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblWarranty_tblEquipment", Storage="_tblEquipments", ThisKey="warranty_code", OtherKey="warranty_code")]
		public EntitySet<tblEquipment> tblEquipments
		{
			get
			{
				return this._tblEquipments;
			}
			set
			{
				this._tblEquipments.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tblEquipments(tblEquipment entity)
		{
			this.SendPropertyChanging();
			entity.tblWarranty = this;
		}
		
		private void detach_tblEquipments(tblEquipment entity)
		{
			this.SendPropertyChanging();
			entity.tblWarranty = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblHardware")]
	public partial class tblHardware : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _hardware_code;
		
		private string _hardware_name;
		
		private EntitySet<tblEquipment> _tblEquipments;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onhardware_codeChanging(int value);
    partial void Onhardware_codeChanged();
    partial void Onhardware_nameChanging(string value);
    partial void Onhardware_nameChanged();
    #endregion
		
		public tblHardware()
		{
			this._tblEquipments = new EntitySet<tblEquipment>(new Action<tblEquipment>(this.attach_tblEquipments), new Action<tblEquipment>(this.detach_tblEquipments));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hardware_code", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int hardware_code
		{
			get
			{
				return this._hardware_code;
			}
			set
			{
				if ((this._hardware_code != value))
				{
					this.Onhardware_codeChanging(value);
					this.SendPropertyChanging();
					this._hardware_code = value;
					this.SendPropertyChanged("hardware_code");
					this.Onhardware_codeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hardware_name", DbType="VarChar(50)")]
		public string hardware_name
		{
			get
			{
				return this._hardware_name;
			}
			set
			{
				if ((this._hardware_name != value))
				{
					this.Onhardware_nameChanging(value);
					this.SendPropertyChanging();
					this._hardware_name = value;
					this.SendPropertyChanged("hardware_name");
					this.Onhardware_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblHardware_tblEquipment", Storage="_tblEquipments", ThisKey="hardware_code", OtherKey="hardware_code")]
		public EntitySet<tblEquipment> tblEquipments
		{
			get
			{
				return this._tblEquipments;
			}
			set
			{
				this._tblEquipments.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tblEquipments(tblEquipment entity)
		{
			this.SendPropertyChanging();
			entity.tblHardware = this;
		}
		
		private void detach_tblEquipments(tblEquipment entity)
		{
			this.SendPropertyChanging();
			entity.tblHardware = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblEquipment")]
	public partial class tblEquipment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _equipment_code;
		
		private System.Nullable<int> _hardware_code;
		
		private string _equipment_model;
		
		private System.Nullable<int> _warranty_code;
		
		private System.Nullable<int> _state_code;
		
		private bool _equipment_freez;
		
		private EntitySet<tblReport> _tblReports;
		
		private EntityRef<tblSystem> _tblSystem;
		
		private EntityRef<tblHardware> _tblHardware;
		
		private EntityRef<tblState> _tblState;
		
		private EntityRef<tblWarranty> _tblWarranty;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onequipment_codeChanging(int value);
    partial void Onequipment_codeChanged();
    partial void Onhardware_codeChanging(System.Nullable<int> value);
    partial void Onhardware_codeChanged();
    partial void Onequipment_modelChanging(string value);
    partial void Onequipment_modelChanged();
    partial void Onwarranty_codeChanging(System.Nullable<int> value);
    partial void Onwarranty_codeChanged();
    partial void Onstate_codeChanging(System.Nullable<int> value);
    partial void Onstate_codeChanged();
    partial void Onequipment_freezChanging(bool value);
    partial void Onequipment_freezChanged();
    #endregion
		
		public tblEquipment()
		{
			this._tblReports = new EntitySet<tblReport>(new Action<tblReport>(this.attach_tblReports), new Action<tblReport>(this.detach_tblReports));
			this._tblSystem = default(EntityRef<tblSystem>);
			this._tblHardware = default(EntityRef<tblHardware>);
			this._tblState = default(EntityRef<tblState>);
			this._tblWarranty = default(EntityRef<tblWarranty>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_equipment_code", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int equipment_code
		{
			get
			{
				return this._equipment_code;
			}
			set
			{
				if ((this._equipment_code != value))
				{
					this.Onequipment_codeChanging(value);
					this.SendPropertyChanging();
					this._equipment_code = value;
					this.SendPropertyChanged("equipment_code");
					this.Onequipment_codeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hardware_code", DbType="Int")]
		public System.Nullable<int> hardware_code
		{
			get
			{
				return this._hardware_code;
			}
			set
			{
				if ((this._hardware_code != value))
				{
					if (this._tblHardware.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onhardware_codeChanging(value);
					this.SendPropertyChanging();
					this._hardware_code = value;
					this.SendPropertyChanged("hardware_code");
					this.Onhardware_codeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_equipment_model", DbType="NVarChar(50)")]
		public string equipment_model
		{
			get
			{
				return this._equipment_model;
			}
			set
			{
				if ((this._equipment_model != value))
				{
					this.Onequipment_modelChanging(value);
					this.SendPropertyChanging();
					this._equipment_model = value;
					this.SendPropertyChanged("equipment_model");
					this.Onequipment_modelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_warranty_code", DbType="Int")]
		public System.Nullable<int> warranty_code
		{
			get
			{
				return this._warranty_code;
			}
			set
			{
				if ((this._warranty_code != value))
				{
					if (this._tblWarranty.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onwarranty_codeChanging(value);
					this.SendPropertyChanging();
					this._warranty_code = value;
					this.SendPropertyChanged("warranty_code");
					this.Onwarranty_codeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_state_code", DbType="Int")]
		public System.Nullable<int> state_code
		{
			get
			{
				return this._state_code;
			}
			set
			{
				if ((this._state_code != value))
				{
					if (this._tblState.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onstate_codeChanging(value);
					this.SendPropertyChanging();
					this._state_code = value;
					this.SendPropertyChanged("state_code");
					this.Onstate_codeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_equipment_freez", DbType="Bit NOT NULL")]
		public bool equipment_freez
		{
			get
			{
				return this._equipment_freez;
			}
			set
			{
				if ((this._equipment_freez != value))
				{
					this.Onequipment_freezChanging(value);
					this.SendPropertyChanging();
					this._equipment_freez = value;
					this.SendPropertyChanged("equipment_freez");
					this.Onequipment_freezChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblEquipment_tblReport", Storage="_tblReports", ThisKey="equipment_code", OtherKey="Equimpment_code")]
		public EntitySet<tblReport> tblReports
		{
			get
			{
				return this._tblReports;
			}
			set
			{
				this._tblReports.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblEquipment_tblSystem", Storage="_tblSystem", ThisKey="equipment_code", OtherKey="equipment_code", IsUnique=true, IsForeignKey=false)]
		public tblSystem tblSystem
		{
			get
			{
				return this._tblSystem.Entity;
			}
			set
			{
				tblSystem previousValue = this._tblSystem.Entity;
				if (((previousValue != value) 
							|| (this._tblSystem.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblSystem.Entity = null;
						previousValue.tblEquipment = null;
					}
					this._tblSystem.Entity = value;
					if ((value != null))
					{
						value.tblEquipment = this;
					}
					this.SendPropertyChanged("tblSystem");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblHardware_tblEquipment", Storage="_tblHardware", ThisKey="hardware_code", OtherKey="hardware_code", IsForeignKey=true, DeleteRule="CASCADE")]
		public tblHardware tblHardware
		{
			get
			{
				return this._tblHardware.Entity;
			}
			set
			{
				tblHardware previousValue = this._tblHardware.Entity;
				if (((previousValue != value) 
							|| (this._tblHardware.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblHardware.Entity = null;
						previousValue.tblEquipments.Remove(this);
					}
					this._tblHardware.Entity = value;
					if ((value != null))
					{
						value.tblEquipments.Add(this);
						this._hardware_code = value.hardware_code;
					}
					else
					{
						this._hardware_code = default(Nullable<int>);
					}
					this.SendPropertyChanged("tblHardware");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblState_tblEquipment", Storage="_tblState", ThisKey="state_code", OtherKey="state_code", IsForeignKey=true, DeleteRule="CASCADE")]
		public tblState tblState
		{
			get
			{
				return this._tblState.Entity;
			}
			set
			{
				tblState previousValue = this._tblState.Entity;
				if (((previousValue != value) 
							|| (this._tblState.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblState.Entity = null;
						previousValue.tblEquipments.Remove(this);
					}
					this._tblState.Entity = value;
					if ((value != null))
					{
						value.tblEquipments.Add(this);
						this._state_code = value.state_code;
					}
					else
					{
						this._state_code = default(Nullable<int>);
					}
					this.SendPropertyChanged("tblState");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblWarranty_tblEquipment", Storage="_tblWarranty", ThisKey="warranty_code", OtherKey="warranty_code", IsForeignKey=true, DeleteRule="CASCADE")]
		public tblWarranty tblWarranty
		{
			get
			{
				return this._tblWarranty.Entity;
			}
			set
			{
				tblWarranty previousValue = this._tblWarranty.Entity;
				if (((previousValue != value) 
							|| (this._tblWarranty.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblWarranty.Entity = null;
						previousValue.tblEquipments.Remove(this);
					}
					this._tblWarranty.Entity = value;
					if ((value != null))
					{
						value.tblEquipments.Add(this);
						this._warranty_code = value.warranty_code;
					}
					else
					{
						this._warranty_code = default(Nullable<int>);
					}
					this.SendPropertyChanged("tblWarranty");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tblReports(tblReport entity)
		{
			this.SendPropertyChanging();
			entity.tblEquipment = this;
		}
		
		private void detach_tblReports(tblReport entity)
		{
			this.SendPropertyChanging();
			entity.tblEquipment = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblReport")]
	public partial class tblReport : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _report_code;
		
		private int _Person_code;
		
		private int _Equimpment_code;
		
		private string _Data;
		
		private string _Tozihat;
		
		private EntityRef<tblEquipment> _tblEquipment;
		
		private EntityRef<tblPerson> _tblPerson;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onreport_codeChanging(int value);
    partial void Onreport_codeChanged();
    partial void OnPerson_codeChanging(int value);
    partial void OnPerson_codeChanged();
    partial void OnEquimpment_codeChanging(int value);
    partial void OnEquimpment_codeChanged();
    partial void OnDataChanging(string value);
    partial void OnDataChanged();
    partial void OnTozihatChanging(string value);
    partial void OnTozihatChanged();
    #endregion
		
		public tblReport()
		{
			this._tblEquipment = default(EntityRef<tblEquipment>);
			this._tblPerson = default(EntityRef<tblPerson>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_report_code", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int report_code
		{
			get
			{
				return this._report_code;
			}
			set
			{
				if ((this._report_code != value))
				{
					this.Onreport_codeChanging(value);
					this.SendPropertyChanging();
					this._report_code = value;
					this.SendPropertyChanged("report_code");
					this.Onreport_codeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Person_code", DbType="Int NOT NULL")]
		public int Person_code
		{
			get
			{
				return this._Person_code;
			}
			set
			{
				if ((this._Person_code != value))
				{
					if (this._tblPerson.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPerson_codeChanging(value);
					this.SendPropertyChanging();
					this._Person_code = value;
					this.SendPropertyChanged("Person_code");
					this.OnPerson_codeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Equimpment_code", DbType="Int NOT NULL")]
		public int Equimpment_code
		{
			get
			{
				return this._Equimpment_code;
			}
			set
			{
				if ((this._Equimpment_code != value))
				{
					if (this._tblEquipment.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEquimpment_codeChanging(value);
					this.SendPropertyChanging();
					this._Equimpment_code = value;
					this.SendPropertyChanged("Equimpment_code");
					this.OnEquimpment_codeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Data", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Data
		{
			get
			{
				return this._Data;
			}
			set
			{
				if ((this._Data != value))
				{
					this.OnDataChanging(value);
					this.SendPropertyChanging();
					this._Data = value;
					this.SendPropertyChanged("Data");
					this.OnDataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tozihat", DbType="NVarChar(MAX)")]
		public string Tozihat
		{
			get
			{
				return this._Tozihat;
			}
			set
			{
				if ((this._Tozihat != value))
				{
					this.OnTozihatChanging(value);
					this.SendPropertyChanging();
					this._Tozihat = value;
					this.SendPropertyChanged("Tozihat");
					this.OnTozihatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblEquipment_tblReport", Storage="_tblEquipment", ThisKey="Equimpment_code", OtherKey="equipment_code", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public tblEquipment tblEquipment
		{
			get
			{
				return this._tblEquipment.Entity;
			}
			set
			{
				tblEquipment previousValue = this._tblEquipment.Entity;
				if (((previousValue != value) 
							|| (this._tblEquipment.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblEquipment.Entity = null;
						previousValue.tblReports.Remove(this);
					}
					this._tblEquipment.Entity = value;
					if ((value != null))
					{
						value.tblReports.Add(this);
						this._Equimpment_code = value.equipment_code;
					}
					else
					{
						this._Equimpment_code = default(int);
					}
					this.SendPropertyChanged("tblEquipment");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblPerson_tblReport", Storage="_tblPerson", ThisKey="Person_code", OtherKey="person_code", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public tblPerson tblPerson
		{
			get
			{
				return this._tblPerson.Entity;
			}
			set
			{
				tblPerson previousValue = this._tblPerson.Entity;
				if (((previousValue != value) 
							|| (this._tblPerson.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblPerson.Entity = null;
						previousValue.tblReports.Remove(this);
					}
					this._tblPerson.Entity = value;
					if ((value != null))
					{
						value.tblReports.Add(this);
						this._Person_code = value.person_code;
					}
					else
					{
						this._Person_code = default(int);
					}
					this.SendPropertyChanged("tblPerson");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblSystem")]
	public partial class tblSystem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _system_code;
		
		private int _equipment_code;
		
		private EntityRef<tblEquipment> _tblEquipment;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onsystem_codeChanging(int value);
    partial void Onsystem_codeChanged();
    partial void Onequipment_codeChanging(int value);
    partial void Onequipment_codeChanged();
    #endregion
		
		public tblSystem()
		{
			this._tblEquipment = default(EntityRef<tblEquipment>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_system_code", DbType="Int NOT NULL")]
		public int system_code
		{
			get
			{
				return this._system_code;
			}
			set
			{
				if ((this._system_code != value))
				{
					this.Onsystem_codeChanging(value);
					this.SendPropertyChanging();
					this._system_code = value;
					this.SendPropertyChanged("system_code");
					this.Onsystem_codeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_equipment_code", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int equipment_code
		{
			get
			{
				return this._equipment_code;
			}
			set
			{
				if ((this._equipment_code != value))
				{
					if (this._tblEquipment.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onequipment_codeChanging(value);
					this.SendPropertyChanging();
					this._equipment_code = value;
					this.SendPropertyChanged("equipment_code");
					this.Onequipment_codeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblEquipment_tblSystem", Storage="_tblEquipment", ThisKey="equipment_code", OtherKey="equipment_code", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public tblEquipment tblEquipment
		{
			get
			{
				return this._tblEquipment.Entity;
			}
			set
			{
				tblEquipment previousValue = this._tblEquipment.Entity;
				if (((previousValue != value) 
							|| (this._tblEquipment.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblEquipment.Entity = null;
						previousValue.tblSystem = null;
					}
					this._tblEquipment.Entity = value;
					if ((value != null))
					{
						value.tblSystem = this;
						this._equipment_code = value.equipment_code;
					}
					else
					{
						this._equipment_code = default(int);
					}
					this.SendPropertyChanged("tblEquipment");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
